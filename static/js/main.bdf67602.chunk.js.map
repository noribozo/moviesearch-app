{"version":3,"sources":["logo.svg","movieCard.js","searchMovies.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","className","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","error","onSubmit","htmlFor","type","name","placeholder","onChange","target","value","filter","map","id","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,I,mCCEA,SAASA,EAAT,GAA4B,IAARC,EAAO,EAAPA,MAC/B,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAW,cAChBC,IAAG,0DAAqDF,EAAMG,aAC9DC,IAAKJ,EAAMK,MAAQ,YACnB,sBAAKJ,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMK,QACnC,4BAAG,mDAAsBL,EAAMM,kBAC/B,4BAAG,6CAAgBN,EAAMO,kBACzB,mBAAGN,UAAU,aAAb,SAA2BD,EAAMQ,iBCRlC,SAASC,IAAe,IAAD,EACRC,mBAAS,IADD,mBAC3BC,EAD2B,KACpBC,EADoB,OAENF,mBAAS,IAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAI/BC,EAAY,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DACjBD,EAAEE,iBACIC,EAFW,yHAGMR,EAHN,iDAKAS,MAAMD,GALN,cAKZE,EALY,gBAMCA,EAAIC,OANL,OAMZC,EANY,OAOlBT,EAAUS,EAAKC,SAPG,kDASlBC,QAAQC,MAAR,MATkB,0DAAH,sDAYnB,OACI,qCACI,uBAAMzB,UAAU,OAAO0B,SAAUZ,EAAjC,UACI,uBAAOd,UAAU,QAAQ2B,QAAQ,QAAjC,wBACA,uBAAO3B,UAAU,QAAQ4B,KAAK,OAAOC,KAAK,QACtCC,YAAY,6BACZC,SAAU,SAAChB,GAAD,OAAMJ,EAASI,EAAEiB,OAAOC,UAEtC,wBAAQjC,UAAU,SAAQ4B,KAAK,SAA/B,uBAEJ,qBAAK5B,UAAU,YAAf,SACKY,EAAOsB,QAAO,SAAAnC,GAAK,OAAIA,EAAMG,eAAaiC,KAAI,SAAApC,GAAK,OAChD,cAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMqC,Y,IChBrCC,E,uKATX,OACE,sBAAKrC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAACQ,EAAD,W,GALU8B,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bdf67602.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nexport default function MovieCard({movie}){\r\n    return(\r\n        <div className=\"card\">\r\n            <img className =\"card--image\"\r\n            src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n            alt={movie.title + ' poster'}/>\r\n            <div className=\"card--content\">\r\n                <h3 className=\"card--title\">{movie.title}</h3>\r\n                <p><small>RELEASE DATE: {movie.release_date}</small></p>\r\n                <p><small>VOTING: {movie.vote_average}</small></p>\r\n                <p className=\"card--desc\">{movie.overview}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport MovieCard from './movieCard.js';\r\n\r\n\r\nexport default function SearchMovies(){\r\n    const [query, setQuery] = useState('');\r\n    const [movies, setMovies] = useState([]);\r\n\r\n const searchMovies = async(e) => {\r\n     e.preventDefault();\r\n     const url =  `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&\r\n     language=en-US&query=${query}&page=1&include_adult=false`;\r\ntry{ \r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    setMovies(data.results);\r\n}catch(err){\r\n    console.error(err)} \r\n}  \r\n\r\nreturn(\r\n    <>\r\n        <form className=\"form\" onSubmit={searchMovies}>\r\n            <label className=\"label\" htmlFor=\"query\">Movie Name</label>\r\n            <input className=\"input\" type=\"text\" name=\"query\"\r\n                placeholder=\"type a movie title here...\"\r\n                onChange={(e) =>setQuery(e.target.value)}\r\n                />\r\n            <button className=\"button\"type=\"submit\">Search</button>\r\n        </form>\r\n        <div className=\"card-list\">\r\n            {movies.filter(movie => movie.poster_path).map(movie =>(\r\n                <MovieCard movie={movie} key={movie.id} />\r\n            ))}\r\n        </div>\r\n    </>\r\n)\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SearchMovies from \"./searchMovies.js\"\n\nclass App extends React.Component{\n  render(){\n    return(\n      <div className=\"container\">\n        <h1 className=\"title\">React Movie Search</h1>\n        <SearchMovies />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}